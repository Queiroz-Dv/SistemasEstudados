<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DSEstadosECidades" targetNamespace="http://tempuri.org/DSEstadosECidades.xsd" xmlns:mstns="http://tempuri.org/DSEstadosECidades.xsd" xmlns="http://tempuri.org/DSEstadosECidades.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LivroDataBaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LivroDataBaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Treinojunior.Properties.Settings.GlobalReference.Default.LivroDataBaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CidadesTableAdapter" GeneratorDataComponentClassName="CidadesTableAdapter" Name="Cidades" UserDataComponentName="CidadesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LivroDataBaseConnectionString (Settings)" DbObjectName="LivroDataBase.dbo.Cidades" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Cidades] WHERE (([idcidade] = @Original_idcidade) AND ([idestado] = @Original_idestado) AND ([nome] = @Original_nome))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_idcidade" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idcidade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_idestado" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idestado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Cidades] ([idcidade], [idestado], [nome]) VALUES (@idcidade, @idestado, @nome);
SELECT idcidade, idestado, nome FROM Cidades WHERE (idcidade = @idcidade)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@idcidade" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idcidade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@idestado" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idestado" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idcidade, idestado, nome FROM dbo.Cidades</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Cidades] SET [idcidade] = @idcidade, [idestado] = @idestado, [nome] = @nome WHERE (([idcidade] = @Original_idcidade) AND ([idestado] = @Original_idestado) AND ([nome] = @Original_nome));
SELECT idcidade, idestado, nome FROM Cidades WHERE (idcidade = @idcidade)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@idcidade" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idcidade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@idestado" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idestado" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_idcidade" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idcidade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_idestado" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idestado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idcidade" DataSetColumn="idcidade" />
              <Mapping SourceColumn="idestado" DataSetColumn="idestado" />
              <Mapping SourceColumn="nome" DataSetColumn="nome" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EstadosTableAdapter" GeneratorDataComponentClassName="EstadosTableAdapter" Name="Estados" UserDataComponentName="EstadosTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LivroDataBaseConnectionString (Settings)" DbObjectName="LivroDataBase.dbo.Estados" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Estados] WHERE (([idestado] = @Original_idestado) AND ([uf] = @Original_uf) AND ([nome] = @Original_nome))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_idestado" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idestado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_uf" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="uf" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Estados] ([uf], [nome]) VALUES (@uf, @nome);
SELECT idestado, uf, nome FROM Estados WHERE (idestado = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@uf" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="uf" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idestado, uf, nome FROM dbo.Estados</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Estados] SET [uf] = @uf, [nome] = @nome WHERE (([idestado] = @Original_idestado) AND ([uf] = @Original_uf) AND ([nome] = @Original_nome));
SELECT idestado, uf, nome FROM Estados WHERE (idestado = @idestado)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@uf" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="uf" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_idestado" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="idestado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_uf" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="uf" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nome" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nome" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idestado" ColumnName="idestado" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@idestado" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="idestado" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idestado" DataSetColumn="idestado" />
              <Mapping SourceColumn="uf" DataSetColumn="uf" />
              <Mapping SourceColumn="nome" DataSetColumn="nome" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LivroDataBaseConnectionString (Settings)" DbObjectName="LivroDataBase.dbo.Estados" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByNome" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByNome" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByNome">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT idestado, uf, nome FROM dbo.Estados ORDER by nome</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DSEstadosECidades" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DSEstadosECidades" msprop:Generator_UserDSName="DSEstadosECidades">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Cidades" msprop:Generator_TableClassName="CidadesDataTable" msprop:Generator_TableVarName="tableCidades" msprop:Generator_RowChangedName="CidadesRowChanged" msprop:Generator_TablePropName="Cidades" msprop:Generator_RowDeletingName="CidadesRowDeleting" msprop:Generator_RowChangingName="CidadesRowChanging" msprop:Generator_RowEvHandlerName="CidadesRowChangeEventHandler" msprop:Generator_RowDeletedName="CidadesRowDeleted" msprop:Generator_RowClassName="CidadesRow" msprop:Generator_UserTableName="Cidades" msprop:Generator_RowEvArgName="CidadesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idcidade" msprop:Generator_ColumnVarNameInTable="columnidcidade" msprop:Generator_ColumnPropNameInRow="idcidade" msprop:Generator_ColumnPropNameInTable="idcidadeColumn" msprop:Generator_UserColumnName="idcidade" type="xs:long" />
              <xs:element name="idestado" msprop:Generator_ColumnVarNameInTable="columnidestado" msprop:Generator_ColumnPropNameInRow="idestado" msprop:Generator_ColumnPropNameInTable="idestadoColumn" msprop:Generator_UserColumnName="idestado" type="xs:long" />
              <xs:element name="nome" msprop:Generator_ColumnVarNameInTable="columnnome" msprop:Generator_ColumnPropNameInRow="nome" msprop:Generator_ColumnPropNameInTable="nomeColumn" msprop:Generator_UserColumnName="nome">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Estados" msprop:Generator_TableClassName="EstadosDataTable" msprop:Generator_TableVarName="tableEstados" msprop:Generator_RowChangedName="EstadosRowChanged" msprop:Generator_TablePropName="Estados" msprop:Generator_RowDeletingName="EstadosRowDeleting" msprop:Generator_RowChangingName="EstadosRowChanging" msprop:Generator_RowEvHandlerName="EstadosRowChangeEventHandler" msprop:Generator_RowDeletedName="EstadosRowDeleted" msprop:Generator_RowClassName="EstadosRow" msprop:Generator_UserTableName="Estados" msprop:Generator_RowEvArgName="EstadosRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idestado" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidestado" msprop:Generator_ColumnPropNameInRow="idestado" msprop:Generator_ColumnPropNameInTable="idestadoColumn" msprop:Generator_UserColumnName="idestado" type="xs:long" />
              <xs:element name="uf" msprop:Generator_ColumnVarNameInTable="columnuf" msprop:Generator_ColumnPropNameInRow="uf" msprop:Generator_ColumnPropNameInTable="ufColumn" msprop:Generator_UserColumnName="uf">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nome" msprop:Generator_ColumnVarNameInTable="columnnome" msprop:Generator_ColumnPropNameInRow="nome" msprop:Generator_ColumnPropNameInTable="nomeColumn" msprop:Generator_UserColumnName="nome">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Cidades" />
      <xs:field xpath="mstns:idcidade" />
    </xs:unique>
    <xs:unique name="Estados_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Estados" />
      <xs:field xpath="mstns:idestado" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Cidades_Estados" msdata:parent="Estados" msdata:child="Cidades" msdata:parentkey="idestado" msdata:childkey="idcidade" msprop:Generator_UserChildTable="Cidades" msprop:Generator_ChildPropName="GetCidadesRows" msprop:Generator_UserRelationName="FK_Cidades_Estados" msprop:Generator_ParentPropName="EstadosRow" msprop:Generator_RelationVarName="relationFK_Cidades_Estados" msprop:Generator_UserParentTable="Estados" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>